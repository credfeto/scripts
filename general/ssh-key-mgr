#! /bin/sh


SSH_KEY_DIR=$HOME/.ssh
SSH_HOSTS_FILE=$SSH_KEY_DIR/config
SSH_KEY_ALGORITHM=ed25519
SSH_KEY_ROUNDS=1000000000

# Ensure SSH key directory exists with sane permissions
[ ! -d "$SSH_KEY_DIR" ] && mkdir -p "$SSH_KEY_DIR"
[ -d "$SSH_KEY_DIR" ] && chmod 700 "$SSH_KEY_DIR"

if [ ! -f "$SSH_HOSTS_FILE" ] ;
then
  {
    echo "Host *"
    echo "  # Always use SSH2."
    echo "  Protocol 2"
    echo ""
    echo "  # Prefer public key auth"
    echo "  PasswordAuthentication no"
    echo "  PubkeyAuthentication yes"
    echo "  PreferredAuthentications=publickey"
    echo ""
    echo "  # Require Identity File"
    echo "  IdentitiesOnly yes"  
  } > "$SSH_HOSTS_FILE"
  chmod 600 "$SSH_HOSTS_FILE"
fi 

PROG=$0
BASEDIR="$(dirname "$(readlink -f "$0")")"
echo "Script Dir: $BASEDIR"

die() {
    echo
    echo "$@"
    exit 1
}

create_ssh_key() {
  HOST=
  COMMENT=
  SKIP_PASSWORD=0
  while [ $# -gt 0 ]; do
    key="$1"

    case $key in
      -h|--host)
        HOST="$2"
        shift # past argument
        shift # past value
        ;;
      -c|--comment)
        COMMENT="$2"        
        shift # past argument
        shift # past value
        ;;
      -n|--no-password)
        SKIP_PASSWORD=1        
        shift # past argument
        ;;
      *)    # unknown option
        shift # past argument
        ;;
    esac
  done
  
  [ -z "$HOST" ] && die "--host not specified"
  [ -z "$COMMENT" ] && die "--comment not specified"
  
  KEY_BASE_NAME="id_$HOST"
  PRIVATE_KEY_FILENAME="$SSH_KEY_DIR/$KEY_BASE_NAME"
  PUBLIC_KEY_FILENAME="$SSH_KEY_DIR/$KEY_BASE_NAME.pub"
  [ -f "$PRIVATE_KEY_FILENAME" ] && die "Private key already exists: $PRIVATE_KEY_FILENAME"
  [ -f "$PUBLIC_KEY_FILENAME" ] && die "Public key already exists: $PUBLIC_KEY_FILENAME"
  
  echo "Creating new SSH key for $HOST"
  echo "Comment: $COMMENT"
  echo "Private Key: $PRIVATE_KEY_FILENAME"
  echo "Public Key: $PRIVATE_KEY_FILENAME"
  [ "$SKIP_PASSWORD" -eq "1" ] && ssh-keygen -o -a "$SSH_KEY_ROUNDS" -t "$SSH_KEY_ALGORITHM" -C "$COMMENT" -P "" -f "$PRIVATE_KEY_FILENAME" 
  [ "$SKIP_PASSWORD" -eq "0" ] && ssh-keygen -o -a "$SSH_KEY_ROUNDS" -t "$SSH_KEY_ALGORITHM" -C "$COMMENT" -f "$PRIVATE_KEY_FILENAME"
  
  {
    echo "Host $HOST"
    echo "  IdentityFile ~/.ssh/$KEY_BASE_NAME"
    echo "  IdentitiesOnly yes"
  } >> "$SSH_HOSTS_FILE"
  
  [ -f "$PUBLIC_KEY_FILENAME" ] && cat "$PUBLIC_KEY_FILENAME"
}

[ $# -lt 1 ] && die "No arguments specified"



ACTION=$1
shift

if [ "$ACTION" = "create" ]; then
  create_ssh_key "$@"
elif [ "$ACTION" = "alias" ]; then
  echo "Creating alias..."
elif [ "$ACTION" = "revoke" ]; then
  echo "Revoking SSH key"
elif [ "$ACTION" = "rotate" ]; then
  echo "Revoking SSH key"
elif [ "$ACTION" = "show" ]; then
  echo "Showing public key"
else
  die "Invalid action: $ACTION"
fi
